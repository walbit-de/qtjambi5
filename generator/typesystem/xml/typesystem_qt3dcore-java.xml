<typesystem package="org.qtjambi.qt3d.core" default-superclass="org.qtjambi.qt.internal.QtJambiObject">
    <inject-code>
        org.qtjambi.qt.Utilities.loadQtLibrary("QtCore");
        if(org.qtjambi.qt.Utilities.isAvailableUtilityLibrary("libGLESv2", ""))
            org.qtjambi.qt.Utilities.loadUtilityLibrary("libGLESv2", "");         // load if exists
        if(org.qtjambi.qt.Utilities.isAvailableUtilityLibrary("libEGL", ""))
            org.qtjambi.qt.Utilities.loadUtilityLibrary("libEGL", "");         // load if exists
        org.qtjambi.qt.Utilities.loadQtLibrary("QtGui");
        org.qtjambi.qt.Utilities.loadQtLibrary("Qt3DCore");
    </inject-code>
	<object-type name="Qt3D::QScenePropertyChange">
		<extra-includes>
			<include file-name="QtCore/QScopedPointer" location="global"/>
			<include file-name="QtCore/QByteArray" location="global"/>
		</extra-includes>
		<inject-code class="shell-declaration" position="end">
public:
    inline void __qt_propertyNameReset(QByteArray* pointer){
        __qt_propertyName.reset(pointer);
    }
private:
    QScopedPointer&lt;QByteArray&gt; __qt_propertyName;
</inject-code>
		<modify-function signature="propertyName()const">
			<modify-argument index="0">
				<replace-type modified-type="java.lang.String"/>
				<conversion-rule class="native">
			jobject %out = (jobject)qtjambi_from_qstring(__jni_env, QLatin1String(%in));
				</conversion-rule>
			</modify-argument>
		</modify-function>
		<modify-function signature="setPropertyName(const char *)">
			<modify-argument index="1">
				<replace-type modified-type="java.lang.String"/>
				<conversion-rule class="native">
				const char * %out = Q_NULLPTR;
				QByteArray* container = Q_NULLPTR;
				if(%in){
					container = new QByteArray(qtjambi_to_qstring(__jni_env, (jstring)%in).toLatin1());
					%out = container->constData();
				}
				</conversion-rule>
			</modify-argument>
			<inject-code class="native" position="end">
				__qt_this->__qt_propertyNameReset(container);
</inject-code>
		</modify-function>
	</object-type>
	<object-type name="Qt3D::QCamera">
	</object-type>
	<value-type name="Qt3D::QAspectFactory">
	</value-type>
	<value-type name="Qt3D::QAxisAlignedBoundingBox">
		<modify-function signature="transform(const QMatrix4x4 &amp;)">
			<modify-argument index="0">
				<replace-type modified-type="void"/>
			</modify-argument>
		</modify-function>
	</value-type>
	<value-type name="Qt3D::QRay3D">
		<modify-function signature="transform(const QMatrix4x4 &amp;)">
			<modify-argument index="0">
				<replace-type modified-type="void"/>
			</modify-argument>
		</modify-function>
	</value-type>
</typesystem>
