<?xml version="1.0"?>
<typesystem>
    <namespace-type name="QSsl">
        <include file-name="qssl.h" location="global" />
    </namespace-type>

  <enum-type name="QSsl::SslOption" />
    <enum-type name="QNetworkProxy::Capability" flags="QNetworkProxy::Capabilities" />
    <enum-type name="QAbstractSocket::NetworkLayerProtocol" />
    <enum-type name="QNetworkProxyQuery::QueryType" />
    <enum-type name="QAbstractSocket::SocketError" />
    <enum-type name="QAbstractSocket::SocketState" />
    <enum-type name="QAbstractSocket::SocketType" />
    <enum-type name="QAbstractSocket::BindFlag" flags="QAbstractSocket::BindMode" />
    <enum-type name="QAbstractSocket::PauseMode" flags="QAbstractSocket::PauseModes" />
    <enum-type name="QAbstractSocket::SocketOption" />
    <!--enum-type name="QFtp::Command" />
    <enum-type name="QFtp::Error" />
    <enum-type name="QFtp::State" />
    <enum-type name="QFtp::TransferMode" />
    <enum-type name="QFtp::TransferType" /-->
    <enum-type name="QHostAddress::SpecialAddress" />
    <!--enum-type name="QHttp::Error" />
    <enum-type name="QHttp::State" />
    <enum-type name="QHttp::ConnectionMode" /-->
    <enum-type name="QHttpMultiPart::ContentType" /><!-- since 4.8 -->
    <enum-type name="QNetworkInterface::InterfaceFlag" flags="QNetworkInterface::InterfaceFlags" />
    <enum-type name="QNetworkProxy::ProxyType" />
    <!--enum-type name="QUrlInfo::PermissionSpec" /-->
    <enum-type name="QHostInfo::HostInfoError" />
    <enum-type name="QSsl::KeyType" />
    <enum-type name="QSsl::EncodingFormat" />
    <enum-type name="QSsl::KeyAlgorithm"/>
    <enum-type name="QSsl::SslProtocol" />
    <enum-type name="QSsl::AlternativeNameEntryType" />
    <enum-type name="QLocalSocket::LocalSocketError" />
    <enum-type name="QLocalSocket::LocalSocketState" />
    <enum-type name="QLocalServer::SocketOption" flags="QLocalServer::SocketOptions" />
    <enum-type name="QNetworkAccessManager::Operation" />
    <enum-type name="QNetworkCookie::RawForm" />
    <enum-type name="QNetworkReply::NetworkError" />
    <enum-type name="QNetworkRequest::Attribute" extensible="yes" />
    <enum-type name="QNetworkRequest::CacheLoadControl" />
    <enum-type name="QNetworkRequest::KnownHeaders" />
    <enum-type name="QNetworkAccessManager::NetworkAccessibility"/>
    <enum-type name="QNetworkRequest::LoadControl"/>
    <enum-type name="QNetworkRequest::Priority"/>
    <enum-type name="QNetworkConfiguration::BearerType"/>
    <enum-type name="QNetworkConfiguration::Purpose"/>
    <enum-type name="QNetworkConfiguration::StateFlag" flags="QNetworkConfiguration::StateFlags"/>
    <enum-type name="QNetworkConfiguration::Type"/>
    <enum-type name="QNetworkConfigurationManager::Capability" flags="QNetworkConfigurationManager::Capabilities"/>
    <enum-type name="QNetworkSession::SessionError"/>
    <enum-type name="QNetworkSession::State"/>
    <enum-type name="QNetworkSession::UsagePolicy" flags="QNetworkSession::UsagePolicies" />
    <enum-type name="QDnsLookup::Error"/>
    <enum-type name="QDnsLookup::Type"/>

    <object-type name="QAbstractNetworkCache" />
    <object-type name="QNetworkDiskCache">
        <modify-function signature="insert(QIODevice*)">
            <modify-argument index="1">
                <reference-count action="ignore" /> <!-- function only has effect on devices retrieved using prepare() -->
            </modify-argument>
        </modify-function>
    </object-type>

    <value-type name="QNetworkCacheMetaData">
        <modify-function signature="operator=(QNetworkCacheMetaData)" remove="all" />
    </value-type>

    <object-type name="QNetworkProxyFactory">
        <modify-function signature="setApplicationProxyFactory(QNetworkProxyFactory*)">
            <modify-argument index="1">
                <define-ownership class="java" owner="cplusplus" />
            </modify-argument>
        </modify-function>
    </object-type>
    <value-type name="QNetworkProxyQuery" >
        <modify-function signature="operator=(QNetworkProxyQuery)" remove="all" />
    </value-type>

    <object-type name="QAbstractSocket">
        <modify-function signature="setSocketOption(QAbstractSocket::SocketOption, const QVariant)" remove="all" />
        <modify-function signature="socketOption(QAbstractSocket::SocketOption)" remove="all"/>
    </object-type>
    <!--object-type name="QFtp" /-->

    <!--object-type name="QHttp">
        <modify-function signature="closeConnection()" remove="all"/>
    </object-type-->
    <object-type name="QTcpServer">
		<modify-function signature="addPendingConnection(QTcpSocket*)">
			<modify-argument index="1">
                <define-ownership class="java" owner="cplusplus"/>
			</modify-argument>
		</modify-function>
    </object-type>
    <object-type name="QTcpSocket" />
    <object-type name="QUdpSocket" />
    <object-type name="QHttpPart">
		<modify-function signature="operator=(const QHttpPart &amp;)" rename="set">
            <modify-argument index="1">
                <reference-count action="ignore" />
            </modify-argument>
		</modify-function>
		<modify-function signature="setBodyDevice(QIODevice*)">
            <modify-argument index="1">
                <reference-count action="ignore" />
            </modify-argument>
		</modify-function>
	</object-type><!-- since 4.8 -->
    <object-type name="QHttpMultiPart" /><!-- since 4.8 -->

    <!--object-type name="QHttpHeader">
        <modify-function signature="operator=(QHttpHeader)" remove="all"/>
    </object-type-->
    <object-type name="QLocalServer" />
    <object-type name="QLocalSocket" />
    <object-type name="QClassPathNetworkAccessManager"/>
	<object-type name="QSchemaNetworkAccessManager"/>
	<object-type name="QNetworkAccessManager">
		<modify-function signature="setCookieJar(QNetworkCookieJar*)">
            <modify-argument index="1">
                <define-ownership class="java" owner="cplusplus" />
            </modify-argument>
        </modify-function>
        <modify-function signature="setCache(QAbstractNetworkCache*)">
            <modify-argument index="1">
                <reference-count action="ignore" />
            </modify-argument>
        </modify-function>
        <modify-function signature="setProxyFactory(QNetworkProxyFactory*)">
            <modify-argument index="1">
                <define-ownership class="java" owner="cplusplus" />
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QNetworkCookieJar" />
    <object-type name="QNetworkReply">
		<modify-function signature="sslConfigurationImplementation(QSslConfiguration &amp;) const" remove="all"/>
		<modify-function signature="setSslConfigurationImplementation(const QSslConfiguration &amp;)" remove="all"/>
		<modify-function signature="ignoreSslErrorsImplementation(const QList&lt;QSslError&gt; &amp;)" remove="all"/>
	</object-type>
	
    <value-type name="QHostAddress">
        <modify-function signature="QHostAddress(unsigned char*)" remove="all"/>
        <modify-function signature="QHostAddress(const unsigned char*)" remove="all"/>
        <modify-function signature="setAddress(unsigned char*)" remove="all"/>
        <modify-function signature="setAddress(const unsigned char*)" remove="all"/>
        <modify-function signature="operator=(QString)" remove="all"/>
        <modify-function signature="operator=(QHostAddress)" remove="all"/>
    </value-type>

    <value-type name="QHostInfo">
            <modify-function signature="operator=(QHostInfo)" remove="all"/>
            <modify-function signature="lookupHost(QString,QObject*,const char*)" access="private" />
    </value-type>

    <!--value-type name="QHttpRequestHeader">
        <modify-function signature="operator=(QHttpRequestHeader)" remove="all"/>
    </value-type-->

    <!--value-type name="QHttpResponseHeader">
        <modify-function signature="operator=(QHttpResponseHeader)" remove="all"/>
    </value-type-->

    <value-type name="QNetworkAddressEntry">
        <modify-function signature="operator=(QNetworkAddressEntry)" remove="all"/>
    </value-type>

    <value-type name="QNetworkInterface">
        <modify-function signature="operator=(QNetworkInterface)" remove="all"/>
    </value-type>

    <value-type name="QNetworkProxy">
        <modify-function signature="operator=(QNetworkProxy)" remove="all"/>
    </value-type>

    <!--value-type name="QUrlInfo">
        <modify-function signature="operator=(QUrlInfo)" remove="all"/>
    </value-type-->

    <value-type name="QIPv6Address">
        <modify-function signature="operator[](int)const">
            <remove/>
        </modify-function>
        <modify-function signature="operator[](int)">
            <remove/>
        </modify-function>
    </value-type>

    <value-type name="QAuthenticator">
        <modify-function signature="operator=(QAuthenticator)" remove="all"/>
    </value-type>

    <value-type name="QNetworkCookie">
        <modify-function signature="operator=(QNetworkCookie)" remove="all" />
    </value-type>

    <value-type name="QNetworkRequest">
        <modify-function signature="operator=(QNetworkRequest)" remove="all" />
		<modify-function signature="setOriginatingObject(QObject*)">
			<modify-argument index="1">
				<reference-count action="ignore" />
			</modify-argument>
		</modify-function>
    </value-type>


    <enum-type name="QSslError::SslError"/>
    <enum-type name="QSslCertificate::SubjectInfo" />
    <enum-type name="QSslSocket::SslMode" />
    <enum-type name="QSslSocket::PeerVerifyMode" />
    <enum-type name="QSslConfiguration::NextProtocolNegotiationStatus" />

    <value-type name="QSslCipher" />
	<value-type name="QSslPreSharedKeyAuthenticator">
		<modify-function signature="operator=(QSslPreSharedKeyAuthenticator)" remove="all" />
		<modify-function signature="operator=(const QSslPreSharedKeyAuthenticator &amp;)" remove="all" />
		<!--modify-function signature="swap(QSslPreSharedKeyAuthenticator &amp;)" remove="all" /-->
	</value-type>
	<value-type name="QSslEllipticCurve">
		<!--modify-function signature="isValid() const" remove="all" /-->
	</value-type>
<!--
-->
    <value-type name="QSslError" />
    <value-type name="QSslKey" />
    <value-type name="QSslCertificate" />
    <value-type name="QSslCertificateExtension" />
    <value-type name="QSslConfiguration" />
    <value-type name="QNetworkConfiguration">
        <modify-function signature="operator=(QNetworkConfiguration)" remove="all" />
    </value-type>

    <object-type name="QNetworkConfigurationManager" />
    <object-type name="QSslSocket" />

    <object-type name="QNetworkSession">
        <modify-function signature="interface()const" rename="getInterface"/>
    </object-type>

    <object-type name="QDnsLookup">
        <modify-function signature="QDnsLookup(QDnsLookup::Type, QString const&amp;, QHostAddress const&amp;, QObject*)" remove="all"/><!-- not sure why this function does not link -->
    </object-type>
    <value-type name="QDnsDomainNameRecord">
		<modify-function signature="operator=(const QDnsDomainNameRecord&amp;)" remove="all"/>
	</value-type>
    <value-type name="QDnsHostAddressRecord">
		<modify-function signature="operator=(const QDnsHostAddressRecord&amp;)" remove="all"/>
	</value-type>
    <value-type name="QDnsMailExchangeRecord">
		<modify-function signature="operator=(const QDnsMailExchangeRecord&amp;)" remove="all"/>
	</value-type>
    <value-type name="QDnsServiceRecord">
		<modify-function signature="operator=(const QDnsServiceRecord&amp;)" remove="all"/>
	</value-type>
    <value-type name="QDnsTextRecord">
		<modify-function signature="operator=(const QDnsTextRecord&amp;)" remove="all"/>
	</value-type>

    <!--object-type name="QNetworkAccessBackend"/>
    <object-type name="QNetworkAccessBackendFactory"/-->

    <suppress-warning text="*unmatched parameter type 'sockaddr const*" />

    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QHttpPart' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." /><!-- since 4.8 -->
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QUrlInfo' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QNetworkCacheMetaData' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QNetworkProxyQuery' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QNetworkAddressEntry' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QNetworkCookie' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QNetworkProxy' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QNetworkRequest' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QAuthenticator' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QSslKey' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QSslError' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QSslCertificate' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QScriptContextInfo' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QSslCipher' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QStaticText' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QSslConfiguration' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QNetworkConfiguration' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QSqlError' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QHostAddress' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>

    <!-- For people building without SSL support -->
    <suppress-warning text="WARNING(MetaJavaBuilder) :: namespace 'org.qtjambi.qt.network.QSslSocket' for enum 'SslMode' is not declared" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: type 'QSslError' is specified in typesystem, but not defined. This could potentially lead to compilation errors." />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: type 'QSslCipher' is specified in typesystem, but not defined. This could potentially lead to compilation errors." />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: type 'QSslKey' is specified in typesystem, but not defined. This could potentially lead to compilation errors." />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: namespace 'org.qtjambi.qt.network.QSslError' for enum 'SslError' is not declared" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: type 'QSslCertificate' is specified in typesystem, but not defined. This could potentially lead to compilation errors." />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: namespace 'org.qtjambi.qt.network.QSslSocket' for enum 'PeerVerifyMode' is not declared"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: namespace 'org.qtjambi.qt.network.QSslCertificate' for enum 'SubjectInfo' is not declared"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: type 'QSslConfiguration' is specified in typesystem, but not defined. This could potentially lead to compilation errors."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: type 'QSslSocket' is specified in typesystem, but not defined. This could potentially lead to compilation errors."/>

</typesystem>
