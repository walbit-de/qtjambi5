/* DO NOT EDIT THIS FILE - it is machine generated */
/* Header for class org_qtjambi_qt_multimedia_QMediaService */

#ifndef _Included_org_qtjambi_qt_multimedia_QMediaService
#define _Included_org_qtjambi_qt_multimedia_QMediaService

#include <QtCore/qglobal.h>
#ifdef Q_OS_MAC
#  include <JavaVM/jni.h>
#else
#  include <jni.h>
#endif
#include <QtMultimedia/QtMultimedia>

#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_qtjambi_qt_multimedia_QMediaService
 * Method:    requestControl
 * Signature: (Ljava/lang/Class;)Lorg/qtjambi/qt/multimedia/QMediaControl;
 */
JNIEXPORT jobject JNICALL Java_org_qtjambi_qt_multimedia_QMediaService_requestControl
  (JNIEnv *, jobject, jclass);

#ifdef __cplusplus
}
#endif

/* this did not work yet:
#ifdef QTJAMBI_GENERATOR_RUN
namespace QAudioBuffer{
struct QtJambiS8S {
    QtJambiS8S() : left(0), right(0){}
    QtJambiS8S(char leftSample, char rightSample) : left(leftSample), right(rightSample){}
    char left;
    char right;
    char average() const {return (left + right) / 2;}
    void clear() {left = right = 0;}
};
struct QtJambiS16S {
    QtJambiS16S() : left(0), right(0){}
    QtJambiS16S(short leftSample, short rightSample) : left(leftSample), right(rightSample){}
    short left;
    short right;
    short average() const {return (left + right) / 2;}
    void clear() {left = right = 0;}
};
struct QtJambiS32F {
    QtJambiS32F() : left(0.f), right(0.f){}
    QtJambiS32F(float leftSample, float rightSample) : left(leftSample), right(rightSample){}
    float left;
    float right;
    float average() const {return (left + right) / 2;}
    void clear() {left = right = 0;}
};
};
#else
typedef QAudioBuffer::S8S QAudioBuffer::QtJambiS8S;
typedef QAudioBuffer::S16S QAudioBuffer::QtJambiS16S;
typedef QAudioBuffer::S32F QAudioBuffer::QtJambiS32F;
#endif
*/

#endif
