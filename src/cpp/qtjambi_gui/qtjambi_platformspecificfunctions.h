/* DO NOT EDIT THIS FILE - it is machine generated */
#include <qtjambi/qtjambi_global.h>
/* Header for class org_qtjambi_qt_gui_MacOSXFunctions and org_qtjambi_qt_gui_X11Functions */

#ifndef _Included_org_qtjambi_qt_gui_PlatformSpecificFunctions
#define _Included_org_qtjambi_qt_gui_PlatformSpecificFunctions
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_qtjambi_qt_gui_X11Functions
 * Method:    __qt_x11_wait_for_window_manager
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_qtjambi_qt_gui_X11Functions__1_1qt_1x11_1wait_1for_1window_1manager
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_qtjambi_qt_gui_MacOSXFunctions
 * Method:    __qt_mac_secure_keyboard
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_org_qtjambi_qt_gui_MacOSXFunctions__1_1qt_1mac_1secure_1keyboard
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     org_qtjambi_qt_gui_MacOSXFunctions
 * Method:    __qt_mac_set_dock_menu
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_qtjambi_qt_gui_MacOSXFunctions__1_1qt_1mac_1set_1dock_1menu
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_qtjambi_qt_gui_MacOSXFunctions
 * Method:    __qt_mac_set_menubar_icons
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_org_qtjambi_qt_gui_MacOSXFunctions__1_1qt_1mac_1set_1menubar_1icons
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     org_qtjambi_qt_gui_MacOSXFunctions
 * Method:    __qt_mac_set_menubar_merge
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_org_qtjambi_qt_gui_MacOSXFunctions__1_1qt_1mac_1set_1menubar_1merge
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     org_qtjambi_qt_gui_MacOSXFunctions
 * Method:    __qt_mac_set_native_menubar
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_org_qtjambi_qt_gui_MacOSXFunctions__1_1qt_1mac_1set_1native_1menubar
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     org_qtjambi_qt_gui_MacOSXFunctions
 * Method:    __qt_mac_set_press_and_hold_context
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_org_qtjambi_qt_gui_MacOSXFunctions__1_1qt_1mac_1set_1press_1and_1hold_1context
  (JNIEnv *, jclass, jboolean);

#ifdef __cplusplus
}
#endif
#endif
